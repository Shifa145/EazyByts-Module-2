{"ast":null,"code":"var _jsxFileName = \"C:\\\\stock-market-dashboard\\\\frontend\\\\src\\\\components\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport '../assets/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  endpoint,\n  title\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state to handle the fetch process\n  const [error, setError] = useState(''); // Error state to handle failed fetches\n\n  useEffect(() => {\n    // Fetching data from the backend API\n    axios.get(endpoint).then(response => {\n      // Assuming response.data is in the format needed for Chart.js\n      setChartData(response.data);\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(err => {\n      console.error('There was an error fetching the data!', err);\n      setError('Failed to fetch chart data');\n      setLoading(false); // Set loading to false even if there's an error\n    });\n  }, [endpoint]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this); // Improved loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Display error message if fetch fails\n  }\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        enabled: true // Enabling tooltips for better interaction\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"zvOU7U5QQ4GyZTHDgGQqCtbqNOc=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","jsxDEV","_jsxDEV","Chart","endpoint","title","_s","chartData","setChartData","loading","setLoading","error","setError","get","then","response","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","scales","x","type","time","unit","y","beginAtZero","display","text","plugins","tooltip","enabled","className","_c","$RefreshReg$"],"sources":["C:/stock-market-dashboard/frontend/src/components/Chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport '../assets/styles.css';\r\n\r\nconst Chart = ({ endpoint, title }) => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Loading state to handle the fetch process\r\n  const [error, setError] = useState(''); // Error state to handle failed fetches\r\n\r\n  useEffect(() => {\r\n    // Fetching data from the backend API\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Assuming response.data is in the format needed for Chart.js\r\n        setChartData(response.data);\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      })\r\n      .catch(err => {\r\n        console.error('There was an error fetching the data!', err);\r\n        setError('Failed to fetch chart data');\r\n        setLoading(false); // Set loading to false even if there's an error\r\n      });\r\n  }, [endpoint]);\r\n\r\n  if (loading) {\r\n    return <p>Loading chart...</p>; // Improved loading message\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>; // Display error message if fetch fails\r\n  }\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day'\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Value'\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        enabled: true, // Enabling tooltips for better interaction\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h3>{title}</h3>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACd;IACAG,KAAK,CAACa,GAAG,CAACT,QAAQ,CAAC,CAChBU,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAP,YAAY,CAACO,QAAQ,CAACC,IAAI,CAAC;MAC3BN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACR,KAAK,CAAC,uCAAuC,EAAEO,GAAG,CAAC;MAC3DN,QAAQ,CAAC,4BAA4B,CAAC;MACtCF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,IAAIK,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAkB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAClC;EAEA,IAAIb,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAAkB,QAAA,EAAIT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC,CAAC;EACzB;EAEA,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjB5B,KAAK,EAAE;UACL6B,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI,CAAE;MACjB;IACF;EACF,CAAC;EAED,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,iBAAiB;IAAAnB,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAKf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA,CAACH,IAAI;MAACiB,IAAI,EAAET,SAAU;MAACkB,OAAO,EAAEA;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1DIH,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AA4DX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}